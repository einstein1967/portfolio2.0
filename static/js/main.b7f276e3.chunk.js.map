{"version":3,"sources":["Navbar/Navbar.js","Project/Project.js","App.js","serviceWorker.js","index.js"],"names":["navbar","props","onClick","className","src","alt","id","href","Projects","imageURL","class","description","runApp","target","type","seeCode","projects","name","App","state","isAboutMe","switchAboutMe","console","log","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+TAmCeA,G,YAhCA,SAACC,GAAW,IACnBC,EAAYD,EAAZC,QAEN,OACE,6BACE,yBAAKC,UAAU,iDACb,yBAAKC,IAAK,mBAAoBC,IAAI,OAAOF,UAAU,SACnD,6BACE,wBAAIA,UAAU,WAAd,eACA,wBAAIA,UAAU,YAAd,yBAEF,yBAAKA,UAAU,2BAA2BG,GAAG,aAC7C,wBAAIH,UAAU,oBACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,WAAWD,QAAS,kBAAMA,MAAvC,aAEF,wBAAIC,UAAU,YACZ,uBAAGA,UAAU,WAAWI,KAAK,mCAA7B,WAEF,wBAAIJ,UAAU,YACZ,uBAAGA,UAAU,WAAWI,KAAK,4CAA7B,aAEF,wBAAIJ,UAAU,YACZ,uBAAGA,UAAU,WAAWI,KAAO,kCAA/B,kBCZGC,G,MAXE,SAACP,GACd,OACI,yBAAKE,UAAU,eACX,yBAAKC,IAAKH,EAAMQ,SAAUJ,IAAI,GAAGF,UAAU,eAC3C,uBAAGO,MAAM,eAAeT,EAAMU,aAC9B,uBAAGJ,KAAMN,EAAMW,OAAQC,OAAO,UAAS,4BAAQC,KAAK,UAAb,YACvC,uBAAGP,KAAMN,EAAMc,QAASF,OAAO,UAAS,4BAAQC,KAAK,SAASX,UAAU,UAAhC,gBCJ9Ca,EAAW,CACf,CACEC,KAAM,SACNR,SAAU,sBACVE,YAAa,mJACbC,OAAQ,kDACRG,QAAS,mDAEX,CACEE,KAAM,WACNR,SAAU,wBACVE,YAAa,kHACbC,OAAQ,wCACRG,QAAS,8DAEX,CACEE,KAAM,gBACNR,SAAU,oBACVE,YAAa,oDACbC,OAAQ,6DACRG,QAAS,+DA8DEG,E,2MAzDfC,MAAQ,CACPC,WAAW,G,EAGZC,cAAgB,WAEdC,QAAQC,IAAI,iBACZ,EAAKC,SAAS,CACZJ,WAAW,K,wEAKX,OACE,yBAAKjB,UAAU,iBACb,kBAAC,EAAD,CACED,QAASuB,KAAKJ,gBAEhB,yBAAKf,GAAG,QACLmB,KAAKN,MAAMC,UACZ,kEAGA,oDAGF,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACEM,SAAUO,EAAS,GAAGP,SACtBE,YAAaK,EAAS,GAAGL,YACzBC,OAAQI,EAAS,GAAGJ,OACpBG,QAASC,EAAS,GAAGD,WAGzB,yBAAKZ,UAAU,YACb,kBAAC,EAAD,CACEM,SAAUO,EAAS,GAAGP,SACtBE,YAAaK,EAAS,GAAGL,YACzBC,OAAQI,EAAS,GAAGJ,OACpBG,QAASC,EAAS,GAAGD,WAGzB,yBAAKZ,UAAU,YACb,kBAAC,EAAD,CACEM,SAAUO,EAAS,GAAGP,SACtBE,YAAaK,EAAS,GAAGL,YACzBC,OAAQI,EAAS,GAAGJ,OACpBG,QAASC,EAAS,GAAGD,iB,GAjDjBW,aCjBEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b7f276e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\n\r\nconst navbar = (props) => {\r\nconst { onClick } = props;\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <img src={'/images/logo.jpg'} alt=\"logo\" className=\"logo\"></img>\r\n        <div>\r\n          <h3 className=\"navName\">Eric Bergan</h3>\r\n          <h2 className=\"navTitle\">Full Stack Developer</h2>\r\n        </div>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav links\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" onClick={() => onClick()}>About Me</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"https://github.com/einstein1967\">Github</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"https://www.linkedin.com/in/eric-bergan/\">LinkedIn</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href = \"mailto: bootcamp.ejb@gmail.com\">Contact</a>\r\n          </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default navbar;","import React from 'react';\r\nimport './Project.css';\r\n\r\nconst Projects = (props) => {\r\n    return (\r\n        <div className=\"projectCard\">\r\n            <img src={props.imageURL} alt=\"\" className=\"projectImg\"></img>\r\n            <p class=\"projectDesc\">{props.description}</p>\r\n            <a href={props.runApp} target=\"_blank\"><button type=\"button\">Run App</button></a>\r\n            <a href={props.seeCode} target=\"_blank\"><button type=\"button\" className=\"runApp\">See Code</button></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar/Navbar';\nimport Project from './Project/Project'\n\nconst projects = [\n  {\n    name: \"Burger\",\n    imageURL: \"./images/burger.jpg\",\n    description: \"Full stack app that adds the user's input (ideally a sandwich) to a MySQL database, allows the user to 'devour' the sandwich, and then delete it\",\n    runApp: \"https://ericjbergan.github.io/burger.github.io/\",\n    seeCode: \"https://github.com/ericjbergan/burger.github.io\"\n  },\n  {\n    name: \"Nesterly\",\n    imageURL: \"./images/nesterly.jpg\",\n    description: \"Full stack app that allows you to keep track of your household goods; functions but is still a work in progress\",\n    runApp: \"https://bootcamp-proj2.herokuapp.com/\",\n    seeCode: \"https://github.com/ericjbergan/bootcamp-project2.github.io\"\n  },\n  {\n    name: \"Gem Collector\",\n    imageURL: \"./images/gems.jpg\",\n    description: \"A game for improving basic math and memory skills\",\n    runApp: \"https://ericjbergan.github.io/crystal-collector.github.io/\",\n    seeCode: \"https://github.com/ericjbergan/crystal-collector.github.io\"\n  },\n];\n\nclass App extends Component {\nstate = {\n isAboutMe: false\n}\n\nswitchAboutMe = () => {\n  //update state\n  console.log('I was clicked');\n  this.setState({\n    isAboutMe: true\n  })\n}\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Navbar \n          onClick={this.switchAboutMe} \n          />\n        <div id=\"body\">\n          {this.state.isAboutMe ? \n          <h1>Hi, I'm Eric; Full Stack Developer</h1>\n          //<h1>from Minneapolis/St. Paul, MN</h1>\n          :\n          <h1>THIS IS WORKING!!!!</h1>\n        }\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <Project\n              imageURL={projects[0].imageURL}\n              description={projects[0].description}\n              runApp={projects[0].runApp}\n              seeCode={projects[0].seeCode}\n            />\n          </div>\n          <div className=\"col-md-4\">\n            <Project\n              imageURL={projects[1].imageURL}\n              description={projects[1].description}\n              runApp={projects[1].runApp}\n              seeCode={projects[1].seeCode}\n            />\n          </div>\n          <div className=\"col-md-4\">\n            <Project\n              imageURL={projects[2].imageURL}\n              description={projects[2].description}\n              runApp={projects[2].runApp}\n              seeCode={projects[2].seeCode}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}