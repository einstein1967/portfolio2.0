{"version":3,"sources":["components/Navbar/Navbar.js","components/Project/Project.js","App.js","serviceWorker.js","index.js"],"names":["navbar","props","className","src","alt","id","onClick","click","href","projects","name","imageURL","description","runApp","seeCode","Projects","map","card","target","rel","type","App","state","isAboutMe","switchAboutMe","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+TAkCeA,G,YA/BA,SAACC,GAEd,OACE,6BACE,yBAAKC,UAAU,iDACb,yBAAKC,IAAK,aAAcC,IAAI,OAAOF,UAAU,SAC7C,6BACE,wBAAIA,UAAU,WAAd,eACA,wBAAIA,UAAU,YAAd,yBAEF,yBAAKA,UAAU,2BAA2BG,GAAG,aAC7C,wBAAIH,UAAU,oBACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,WAAWI,QAASL,EAAMM,OAAvC,aAEF,wBAAIL,UAAU,YACZ,uBAAGA,UAAU,WAAWM,KAAK,kCAA7B,WAEF,wBAAIN,UAAU,YACZ,uBAAGA,UAAU,WAAWM,KAAK,4CAA7B,aAEF,wBAAIN,UAAU,YACZ,uBAAGA,UAAU,WAAWM,KAAO,iCAA/B,kBCtBNC,G,MAAW,CACb,CACIC,KAAM,SACNC,SAAU,oBACVC,YAAa,mJACbC,OAAQ,kDACRC,QAAS,mDAEb,CACIJ,KAAM,WACNC,SAAU,sBACVC,YAAa,kHACbC,OAAQ,wCACRC,QAAS,8DAEb,CACIJ,KAAM,gBACNC,SAAU,qBACVC,YAAa,oDACbC,OAAQ,6DACRC,QAAS,gEA4BFC,EAvBE,WAGd,OAAON,EAASO,IAAI,SAAAC,GACf,OACI,yBAAKf,UAAU,gBACX,yBAAKA,UAAU,WACX,yBAAKC,IAAKc,EAAKN,SAAUP,IAAI,GAAGF,UAAU,eAC1C,yBAAKA,UAAU,gBACX,uBAAGM,KAAMS,EAAKJ,OAAQK,OAAO,SAASC,IAAI,uBACtC,4BAAQC,KAAK,UAAb,YACJ,uBAAGZ,KAAMS,EAAKH,QAASI,OAAO,SAASC,IAAI,uBACvC,4BAAQC,KAAK,SAASlB,UAAU,UAAhC,eAGZ,yBAAKA,UAAU,YACX,uBAAGA,UAAU,gBAAgBe,EAAKL,kBCOvCS,E,2MA7CbC,MAAQ,CACNC,WAAW,G,EAGbC,cAAgB,WAEd,EAAKC,SAAS,CACZF,WAAW,K,wEAKb,OACE,yBAAKrB,UAAU,iBACb,kBAAC,EAAD,CAAQK,MAAOmB,KAAKF,gBAEpB,yBAAKnB,GAAG,QACLqB,KAAKJ,MAAMC,UACV,6BACE,kEACA,8DAGF,6BACE,6BACE,yBAAKpB,IAAI,oBAAoBC,IAAI,UAAUF,UAAU,mBAEvD,6BACE,uBAAGA,UAAU,OAAb,yMAEA,uBAAGA,UAAU,OAAb,oMAEA,uBAAGA,UAAU,OAAb,iUAKN,yBAAKA,UAAU,SACb,kBAAC,EAAD,Y,GAvCMyB,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.bc913e09.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\n\r\nconst navbar = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <img src={'./logo.JPG'} alt=\"logo\" className=\"logo\"></img>\r\n        <div>\r\n          <h3 className=\"navName\">Eric Bergan</h3>\r\n          <h2 className=\"navTitle\">Full Stack Developer</h2>\r\n        </div>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav links\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" onClick={props.click}>About Me</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"https://github.com/ericjbergan\">Github</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"https://www.linkedin.com/in/eric-bergan/\">LinkedIn</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href = \"mailto: ericjbergan@gmail.com\">Contact</a>\r\n          </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default navbar;","import React from 'react';\r\nimport './Project.css';\r\n\r\nconst projects = [\r\n    {\r\n        name: \"Burger\",\r\n        imageURL: \"./eatdaburger.jpg\",\r\n        description: \"Full stack app that adds the user's input (ideally a sandwich) to a MySQL database, allows the user to 'devour' the sandwich, and then delete it\",\r\n        runApp: \"https://ericjbergan.github.io/burger.github.io/\",\r\n        seeCode: \"https://github.com/ericjbergan/burger.github.io\"\r\n    },\r\n    {\r\n        name: \"Nesterly\",\r\n        imageURL: \"./nesterlyimage.jpg\",\r\n        description: \"Full stack app that allows you to keep track of your household goods; functions but is still a work in progress\",\r\n        runApp: \"https://bootcamp-proj2.herokuapp.com/\",\r\n        seeCode: \"https://github.com/ericjbergan/bootcamp-project2.github.io\"\r\n    },\r\n    {\r\n        name: \"Gem Collector\",\r\n        imageURL: \"./gemcollector.jpg\",\r\n        description: \"A game for improving basic math and memory skills\",\r\n        runApp: \"https://ericjbergan.github.io/crystal-collector.github.io/\",\r\n        seeCode: \"https://github.com/ericjbergan/crystal-collector.github.io\"\r\n    }\r\n];\r\n\r\n\r\nconst Projects = () => {\r\n\r\n   \r\n   return projects.map(card => {\r\n        return (\r\n            <div className=\"project-card\">\r\n                <div className=\"img-div\">\r\n                    <img src={card.imageURL} alt=\"\" className=\"projectImg\"></img>\r\n                    <div className=\"link-wrapper\">\r\n                        <a href={card.runApp} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <button type=\"button\">Run App</button></a>\r\n                        <a href={card.seeCode} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <button type=\"button\" className=\"runApp\">See Code</button></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"desc-div\">\r\n                    <p className=\"project-desc\">{card.description}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Project from './components/Project/Project'\n\nclass App extends Component {\n  state = {\n    isAboutMe: true\n  };\n\n  switchAboutMe = () => {\n    //update state\n    this.setState({\n      isAboutMe: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Navbar click={this.switchAboutMe}\n        />\n        <div id=\"body\">\n          {this.state.isAboutMe ?\n            <div>\n              <h1>Hi, I'm Eric; Full Stack Developer</h1>\n              <h1>from Minneapolis/St. Paul, MN</h1>\n            </div>\n            :\n            <div>\n              <div>\n                <img src=\"./profile-pic.jpg\" alt=\"profile\" className=\"profile-image\"></img>\n              </div>\n              <div>\n                <p className=\"bio\">After some time in the medical and donation industries, I decided to take on a new challenge. Coding is something that has always been an interest for me so web development was a logical next step.</p>\n\n                <p className=\"bio\">I am one month out from completing certification from the University of MN Coding Bootcamp where I have learned React.js, MongoDB, MySQL, and many other programming languages and applications.</p>\n\n                <p className=\"bio\">I am friendly, open, intelligent and love a good challenge. Iâ€™m excited about the prospect of going into a job where I can build web applications that fill a need. I want to continue to learn and grow my coding skills to the point where I can teach and mentor other new full stack developers through projects.</p>\n              </div>\n            </div>\n          }\n        </div>\n          <div className=\"cards\">\n            <Project />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}